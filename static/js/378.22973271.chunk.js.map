{"version":3,"file":"static/js/378.22973271.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n\n  (filtered, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        event =>\n          event.name.toLowerCase() === name.toLowerCase() &&\n          event.number === number\n      )\n    ) {\n      alert(`${name}: ${number} is already in contacts!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box>\n        Name\n        <TextField\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Mykhaylo Yervachov\"\n          required\n        />\n      </Box>\n\n      <Box>\n        Number\n        <TextField\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"+380-00-000-0000\"\n          required\n        />\n      </Box>\n\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nimport { setQueryFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(setQueryFilter(event.target.value));\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap=\"10px\">\n      <span>Find contacts by name</span>\n      <TextField\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"Mykhaylo Yervachov\"\n        required\n      />\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\n\nimport { deleteContact, editContact } from 'redux/operations';\n\nexport default function ContactListItem({ id, name, number }) {\n  const [, setEditedName] = useState(name);\n  const [, setEditedNumber] = useState(number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleEditContact = (newName, newNumber) => {\n    if (!isEdit) {\n      setIsEdit(true);\n      return;\n    }\n\n    setIsEdit(false);\n    setEditedName(newName);\n    setEditedNumber(newNumber);\n\n    dispatch(\n      editContact({\n        id: id,\n        name: newName ? newName : name,\n        number: newNumber ? newNumber : number,\n      })\n    );\n  };\n\n  return (\n    <>\n      {isEdit ? (\n        <>\n          <label>\n            Name:\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={event => setEditedName(event.target.value)}\n            />\n          </label>\n\n          <label>\n            Number:\n            <input\n              name=\"number\"\n              type=\"text\"\n              value={number}\n              onChange={event => setEditedNumber(event.target.value)}\n            />\n          </label>\n        </>\n      ) : (\n        <p>\n          {name}: {number}\n        </p>\n      )}\n\n      <div>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Button>\n        <Button type=\"button\" onClick={handleEditContact}>\n          {isEdit ? 'Save' : 'Edit'}\n        </Button>\n      </div>\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport default function ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <ContactListItem id={id} name={name} number={number} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      {isLoading && !error && <p style={{ textAlign: 'center' }}>Loading...</p>}\n\n      {contacts.length === 0 && !isLoading ? (\n        <p style={{ textAlign: 'center' }}>You don't have any contacts yet</p>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","filtered","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContact","Box","TextField","type","onChange","pattern","title","placeholder","required","Button","Filter","display","alignItems","gap","setQueryFilter","target","ContactListItem","id","setEditedName","setEditedNumber","isEdit","setIsEdit","onClick","deleteContact","newName","newNumber","editContact","ContactList","visibleContacts","map","ContactsPage","useEffect","fetchContacts","Container","style","textAlign","length"],"sourceRoot":""}